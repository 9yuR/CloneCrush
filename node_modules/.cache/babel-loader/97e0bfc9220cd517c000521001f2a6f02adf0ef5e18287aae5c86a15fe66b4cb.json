{"ast":null,"code":"import { candies } from '../../utils/candyData';\nimport { formulaForMoveBelow } from '../../utils/formulas';\nexport const moveBelowReducer = state => {\n  const newBoard = [...state.board];\n  const {\n    boardSize\n  } = state;\n  let boardChanges = false;\n  const formulaForMove = formulaForMoveBelow(boardSize);\n  for (let i = 0; i <= formulaForMove; i++) {\n    const firstRow = Array(boardSize).fill(0).map((_value, index) => index);\n    const isFirstRow = firstRow.includes(i);\n    if (isFirstRow && newBoard[i] === '') {\n      let randomNumber = Math.floor(Math.random() * candies.length);\n      newBoard[i] = candies[randomNumber];\n      boardChanges = true;\n    }\n    if (newBoard[i + boardSize] === '') {\n      newBoard[i + boardSize] = newBoard[i];\n      newBoard[i] = '';\n      boardChanges = true;\n    }\n    if (boardChanges) state.board = newBoard;\n  }\n};","map":{"version":3,"names":["candies","formulaForMoveBelow","moveBelowReducer","state","newBoard","board","boardSize","boardChanges","formulaForMove","i","firstRow","Array","fill","map","_value","index","isFirstRow","includes","randomNumber","Math","floor","random","length"],"sources":["/Users/kamgyul/Desktop/vsc/CCrush/candycrush-clone/src/store/reducers/moveBelow.ts"],"sourcesContent":["import { WritableDraft } from 'immer/dist/types/types-external';\nimport { candies } from '../../utils/candyData';\nimport { formulaForMoveBelow } from '../../utils/formulas';\n\nexport const moveBelowReducer = (\n    state: WritableDraft<{\n        board: string[];\n        boardSize: number;\n        // squareBeingReplaced: Element | undefined;\n        // squareBeingDragged: Element | undefined;\n    }>\n) => {\n    const newBoard: string[] = [...state.board];\n    const { boardSize } = state;\n    let boardChanges: boolean = false;\n    const formulaForMove: number = formulaForMoveBelow(boardSize);\n    for (let i = 0; i <= formulaForMove; i++) {\n        const firstRow = Array(boardSize)\n            .fill(0)\n            .map((_value: number, index: number) => index);\n        const isFirstRow = firstRow.includes(i);\n        if (isFirstRow && newBoard[i] === '') {\n            let randomNumber = Math.floor(Math.random() * candies.length);\n            newBoard[i] = candies[randomNumber];\n            boardChanges = true;\n        }\n\n        if (newBoard[i + boardSize] === '') {\n            newBoard[i + boardSize] = newBoard[i];\n            newBoard[i] = '';\n            boardChanges = true;\n        }\n        if (boardChanges) state.board = newBoard;\n    }\n};\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,mBAAmB,QAAQ,sBAAsB;AAE1D,OAAO,MAAMC,gBAAgB,GACzBC,KAKE,IACD;EACD,MAAMC,QAAkB,GAAG,CAAC,GAAGD,KAAK,CAACE,KAAK,CAAC;EAC3C,MAAM;IAAEC;EAAU,CAAC,GAAGH,KAAK;EAC3B,IAAII,YAAqB,GAAG,KAAK;EACjC,MAAMC,cAAsB,GAAGP,mBAAmB,CAACK,SAAS,CAAC;EAC7D,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAID,cAAc,EAAEC,CAAC,EAAE,EAAE;IACtC,MAAMC,QAAQ,GAAGC,KAAK,CAACL,SAAS,CAAC,CAC5BM,IAAI,CAAC,CAAC,CAAC,CACPC,GAAG,CAAC,CAACC,MAAc,EAAEC,KAAa,KAAKA,KAAK,CAAC;IAClD,MAAMC,UAAU,GAAGN,QAAQ,CAACO,QAAQ,CAACR,CAAC,CAAC;IACvC,IAAIO,UAAU,IAAIZ,QAAQ,CAACK,CAAC,CAAC,KAAK,EAAE,EAAE;MAClC,IAAIS,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGrB,OAAO,CAACsB,MAAM,CAAC;MAC7DlB,QAAQ,CAACK,CAAC,CAAC,GAAGT,OAAO,CAACkB,YAAY,CAAC;MACnCX,YAAY,GAAG,IAAI;IACvB;IAEA,IAAIH,QAAQ,CAACK,CAAC,GAAGH,SAAS,CAAC,KAAK,EAAE,EAAE;MAChCF,QAAQ,CAACK,CAAC,GAAGH,SAAS,CAAC,GAAGF,QAAQ,CAACK,CAAC,CAAC;MACrCL,QAAQ,CAACK,CAAC,CAAC,GAAG,EAAE;MAChBF,YAAY,GAAG,IAAI;IACvB;IACA,IAAIA,YAAY,EAAEJ,KAAK,CAACE,KAAK,GAAGD,QAAQ;EAC5C;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}